{"ast":null,"code":"import _classCallCheck from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js\";\nimport React, { Component } from 'react';\nimport secrets from \"./secrets\";\nimport WeatherCard from \"./WeatherCard\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      hasError: false,\n      shouldRenderWeatherCard: false,\n      weatherData: null,\n      zip: \"\"\n    };\n    _this.Content = _this.Content.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchWeather = _this.fetchWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchWeatherByBrowserPosition = _this.fetchWeatherByBrowserPosition.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchWeatherByZip = _this.fetchWeatherByZip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleErrors = _this.handleErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeatherInCurrentLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          weatherData = _this$state.weatherData,\n          zip = _this$state.zip;\n      var Content = this.Content;\n\n      if (!weatherData) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"LOADING...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Current Weather\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"text\",\n        value: zip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.fetchWeatherByZip,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Search\")), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"Content\",\n    value: function Content() {\n      if (this.state.hasError) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Error loading data!\");\n      } else {\n        return React.createElement(WeatherCard, {\n          weatherData: this.state.weatherData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        zip: e.target.value\n      });\n    }\n  }, {\n    key: \"getWeatherInCurrentLocation\",\n    value: function getWeatherInCurrentLocation() {\n      navigator.geolocation.getCurrentPosition(this.fetchWeatherByBrowserPosition);\n    }\n  }, {\n    key: \"fetchWeatherByBrowserPosition\",\n    value: function fetchWeatherByBrowserPosition(position) {\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      var url = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&appid=\").concat(secrets.OPEN_WEATHER_MAP_KEY);\n      this.fetchWeather(url);\n    }\n  }, {\n    key: \"fetchWeatherByZip\",\n    value: function fetchWeatherByZip() {\n      var url = \"http://api.openweathermap.org/data/2.5/weather?zip=\".concat(this.state.zip, \",us&appid=\").concat(secrets.OPEN_WEATHER_MAP_KEY);\n      this.fetchWeather(url);\n    }\n  }, {\n    key: \"fetchWeather\",\n    value: function fetchWeather(url) {\n      var _this2 = this;\n\n      fetch(url).then(this.handleErrors).then(function (jsonData) {\n        return _this2.setState({\n          shouldRenderWeatherCard: true,\n          weatherData: jsonData\n        });\n      }).catch(function (error) {\n        return _this2.setState({\n          hasError: true,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"handleErrors\",\n    value: function handleErrors(response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response.json();\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js"],"names":["React","Component","secrets","WeatherCard","App","props","state","hasError","shouldRenderWeatherCard","weatherData","zip","Content","bind","fetchWeather","fetchWeatherByBrowserPosition","fetchWeatherByZip","handleChange","handleErrors","getWeatherInCurrentLocation","e","setState","target","value","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","url","OPEN_WEATHER_MAP_KEY","fetch","then","jsonData","catch","error","isLoading","response","ok","Error","statusText","json"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport secrets from \"./secrets\";\nimport WeatherCard from \"./WeatherCard\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      shouldRenderWeatherCard: false,\n      weatherData: null,\n      zip: \"\"\n    }\n\n    this.Content = this.Content.bind(this);\n    this.fetchWeather = this.fetchWeather.bind(this);\n    this.fetchWeatherByBrowserPosition = this.fetchWeatherByBrowserPosition.bind(this);\n    this.fetchWeatherByZip = this.fetchWeatherByZip.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleErrors = this.handleErrors.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeatherInCurrentLocation();\n  }\n  \n  render() {\n    const { weatherData, zip } = this.state;\n    const { Content } = this;\n    if (!weatherData) {\n      return <div>LOADING...</div>\n    }\n\n    return (\n      <div>\n        <header>\n          <h1>Current Weather</h1>\n\n          <div>\n            <input onChange={this.handleChange} type=\"text\" value={zip}/>\n            <button onClick={this.fetchWeatherByZip} type=\"button\">Search</button>\n          </div>\n\n          <Content />\n        </header>\n\n      </div>\n    );\n  }\n\n  Content() {\n    if (this.state.hasError) {\n      return <div>Error loading data!</div>\n    } else {\n      return <WeatherCard weatherData={this.state.weatherData} />\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      zip: e.target.value\n    })\n  }\n\n  getWeatherInCurrentLocation() {\n    navigator.geolocation.getCurrentPosition(this.fetchWeatherByBrowserPosition);\n  }\n\n  fetchWeatherByBrowserPosition(position) {\n    const { latitude, longitude } = position.coords;\n\n    const url = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${secrets.OPEN_WEATHER_MAP_KEY}`;\n    this.fetchWeather(url);\n  }\n\n  fetchWeatherByZip() {\n    const url = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zip},us&appid=${secrets.OPEN_WEATHER_MAP_KEY}`;\n    this.fetchWeather(url);\n  }\n\n  fetchWeather(url) {\n    fetch(url)\n      .then(this.handleErrors)\n      .then(jsonData => this.setState({\n        shouldRenderWeatherCard: true,\n        weatherData: jsonData\n      }))\n      .catch((error) => this.setState({\n        hasError: true,\n        isLoading: false\n      })); \n  }\n\n  handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n  }\n    return response.json();\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}