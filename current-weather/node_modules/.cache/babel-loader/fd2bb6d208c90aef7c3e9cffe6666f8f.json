{"ast":null,"code":"import _classCallCheck from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/omarnyte/Projects/react-workshop/current-weather/src/WeatherCard.js\";\nimport './WeatherCard.css';\nimport React, { Component } from 'react';\n\nvar moment = require('moment');\n\nmoment().format();\n\nvar WeatherCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherCard, _Component);\n\n  function WeatherCard() {\n    _classCallCheck(this, WeatherCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherCard).apply(this, arguments));\n  }\n\n  _createClass(WeatherCard, [{\n    key: \"render\",\n    value: function render() {\n      var weatherData = this.props.weatherData;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"weather-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Current Temperature for \", weatherData.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.kelvinToFahrenheit(weatherData.main.temp)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"As of \", this.formatLocalTime()));\n    }\n  }, {\n    key: \"renderTemperature\",\n    value: function renderTemperature(kelvin) {\n      return this.props.showCelcius ? this.kelvinToCelsius(kelvin) : this.kelvinToFahrenheit(kelvin);\n    }\n  }, {\n    key: \"kelvinToCelsius\",\n    value: function kelvinToCelsius(kelvin) {\n      return \"\".concat(Math.floor(kelvin - 273.15), \"\\xB0C\");\n    }\n  }, {\n    key: \"kelvinToFahrenheit\",\n    value: function kelvinToFahrenheit(kelvin) {\n      return \"\".concat(Math.floor((kelvin - 273.15) * 1.8 + 32), \"\\xB0F\");\n    }\n  }, {\n    key: \"formatLocalTime\",\n    value: function formatLocalTime() {\n      var localTime = moment.utc().toDate();\n      return moment(localTime).format('YYYY-MM-DD HH:mm:ss');\n    }\n  }]);\n\n  return WeatherCard;\n}(Component);\n\nexport default WeatherCard;","map":{"version":3,"sources":["/Users/omarnyte/Projects/react-workshop/current-weather/src/WeatherCard.js"],"names":["React","Component","moment","require","format","WeatherCard","weatherData","props","console","log","name","kelvinToFahrenheit","main","temp","formatLocalTime","kelvin","showCelcius","kelvinToCelsius","Math","floor","localTime","utc","toDate"],"mappings":";;;;;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACAD,MAAM,GAAGE,MAAT;;IAEMC,W;;;;;;;;;;;;;6BAEK;AAAA,UACCC,WADD,GACiB,KAAKC,KADtB,CACCD,WADD;AAEPE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,aACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA6BD,WAAW,CAACI,IAAzC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,kBAAL,CAAwBL,WAAW,CAACM,IAAZ,CAAiBC,IAAzC,CAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU,KAAKC,eAAL,EAAV,CAHF,CADD;AAOD;;;sCAEiBC,M,EAAQ;AACxB,aAAQ,KAAKR,KAAL,CAAWS,WAAZ,GAA2B,KAAKC,eAAL,CAAqBF,MAArB,CAA3B,GAA0D,KAAKJ,kBAAL,CAAwBI,MAAxB,CAAjE;AACD;;;oCAEeA,M,EAAQ;AACtB,uBAAUG,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,MAApB,CAAV;AACD;;;uCAEkBA,M,EAAQ;AACzB,uBAAUG,IAAI,CAACC,KAAL,CAAW,CAACJ,MAAM,GAAG,MAAV,IAAoB,GAApB,GAA0B,EAArC,CAAV;AACD;;;sCAEiB;AAChB,UAAIK,SAAS,GAAIlB,MAAM,CAACmB,GAAP,GAAaC,MAAb,EAAjB;AACA,aAAOpB,MAAM,CAACkB,SAAD,CAAN,CAAkBhB,MAAlB,CAAyB,qBAAzB,CAAP;AACD;;;;EA7BuBH,S;;AAiC1B,eAAeI,WAAf","sourcesContent":["import './WeatherCard.css';\nimport React, { Component } from 'react';\nvar moment = require('moment');\nmoment().format();\n\nclass WeatherCard extends Component {\n  \n  render() {\n    const { weatherData } = this.props;\n    console.log(this.props)\n    return (\n     <div className=\"weather-card\">\n       <h2>Current Temperature for {weatherData.name}</h2>\n       <p>{this.kelvinToFahrenheit(weatherData.main.temp)}</p>\n       <p>As of {this.formatLocalTime()}</p>\n     </div> \n    );\n  }\n\n  renderTemperature(kelvin) {\n    return (this.props.showCelcius) ? this.kelvinToCelsius(kelvin) : this.kelvinToFahrenheit(kelvin); \n  }\n\n  kelvinToCelsius(kelvin) {\n    return `${Math.floor(kelvin - 273.15)}°C`;\n  }\n  \n  kelvinToFahrenheit(kelvin) {\n    return `${Math.floor((kelvin - 273.15) * 1.8 + 32)}°F`;\n  }\n\n  formatLocalTime() {\n    var localTime  = moment.utc().toDate();\n    return moment(localTime).format('YYYY-MM-DD HH:mm:ss');\n  }\n\n}\n\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}