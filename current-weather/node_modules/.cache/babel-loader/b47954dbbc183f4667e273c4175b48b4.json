{"ast":null,"code":"import _classCallCheck from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport secrets from \"./secrets\";\nimport WeatherCard from \"./WeatherCard\";\nvar LOADING_STATUS = {\n  ERROR: \"error\",\n  IN_PROGRESS: \"in-progress\",\n  SUCCESS: \"success\"\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      loadingStatus: LOADING_STATUS.IN_PROGRESS,\n      weatherData: null,\n      zip: \"\"\n    };\n    _this.Content = _this.Content.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchWeather = _this.fetchWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchWeatherByBrowserPosition = _this.fetchWeatherByBrowserPosition.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchWeatherByZip = _this.fetchWeatherByZip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleErrors = _this.handleErrors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ZipInput = _this.ZipInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeatherInCurrentLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Content = this.Content,\n          ZipInput = this.ZipInput;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Current Weather\")), React.createElement(ZipInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"ZipInput\",\n    value: function ZipInput() {\n      var zip = this.state.zip;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"text\",\n        value: zip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.fetchWeatherByZip,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Search\"));\n    }\n  }, {\n    key: \"Content\",\n    value: function Content() {\n      var loadingStatus = this.state.loadingStatus;\n\n      if (loadingStatus === LOADING_STATUS.IN_PROGRESS) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Loading...\");\n      } else if (loadingStatus === LOADING_STATUS.ERROR) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Error Loading Data!\");\n      } else {\n        return React.createElement(WeatherCard, {\n          weatherData: this.state.weatherData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      console.log(e.target.value);\n      this.setState({\n        zip: e.target.value\n      });\n    }\n  }, {\n    key: \"getWeatherInCurrentLocation\",\n    value: function getWeatherInCurrentLocation() {\n      navigator.geolocation.getCurrentPosition(this.fetchWeatherByBrowserPosition);\n    }\n  }, {\n    key: \"fetchWeatherByBrowserPosition\",\n    value: function fetchWeatherByBrowserPosition(position) {\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      var url = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&appid=\").concat(secrets.OPEN_WEATHER_MAP_KEY);\n      this.fetchWeather(url);\n    }\n  }, {\n    key: \"fetchWeatherByZip\",\n    value: function fetchWeatherByZip() {\n      this.setState({\n        zip: \"\"\n      });\n      var url = \"http://api.openweathermap.org/data/2.5/weather?zip=\".concat(this.state.zip, \",us&appid=\").concat(secrets.OPEN_WEATHER_MAP_KEY);\n      this.fetchWeather(url);\n    }\n  }, {\n    key: \"fetchWeather\",\n    value: function fetchWeather(url) {\n      var _this2 = this;\n\n      fetch(url).then(this.handleErrors).then(function (jsonData) {\n        return _this2.setState({\n          loadingStatus: LOADING_STATUS.SUCCESS,\n          weatherData: jsonData\n        });\n      }).catch(function () {\n        return _this2.setState({\n          loadingStatus: LOADING_STATUS.ERROR\n        });\n      });\n    }\n  }, {\n    key: \"handleErrors\",\n    value: function handleErrors(response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response.json();\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js"],"names":["React","Component","secrets","WeatherCard","LOADING_STATUS","ERROR","IN_PROGRESS","SUCCESS","App","props","state","loadingStatus","weatherData","zip","Content","bind","fetchWeather","fetchWeatherByBrowserPosition","fetchWeatherByZip","handleChange","handleErrors","ZipInput","getWeatherInCurrentLocation","e","console","log","target","value","setState","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","url","OPEN_WEATHER_MAP_KEY","fetch","then","jsonData","catch","response","ok","Error","statusText","json"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport React, { Component } from 'react';\nimport secrets from \"./secrets\";\nimport WeatherCard from \"./WeatherCard\";\n\nconst LOADING_STATUS = {\n  ERROR: \"error\",\n  IN_PROGRESS: \"in-progress\",\n  SUCCESS: \"success\"\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loadingStatus: LOADING_STATUS.IN_PROGRESS,\n      weatherData: null,\n      zip: \"\"\n    }\n\n    this.Content = this.Content.bind(this);\n    this.fetchWeather = this.fetchWeather.bind(this);\n    this.fetchWeatherByBrowserPosition = this.fetchWeatherByBrowserPosition.bind(this);\n    this.fetchWeatherByZip = this.fetchWeatherByZip.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleErrors = this.handleErrors.bind(this);\n    this.ZipInput = this.ZipInput.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeatherInCurrentLocation();\n  }\n\n  render() {\n    const { Content, ZipInput } = this;\n\n    return (\n      <div className=\"app\">\n        <header>\n          <h1>Current Weather</h1>\n        </header>\n          <ZipInput />\n          <Content />\n      </div>\n    );\n  }\n\n  ZipInput() {\n    const { zip } = this.state;\n    return (\n      <div>\n        <input onChange={this.handleChange} type=\"text\" value={zip} />\n        <button onClick={this.fetchWeatherByZip} type=\"button\">Search</button>\n      </div>\n    )\n  }\n\n  Content() {\n    const { loadingStatus } = this.state;\n\n    if (loadingStatus === LOADING_STATUS.IN_PROGRESS) {\n      return <div>Loading...</div>\n    } else if (loadingStatus === LOADING_STATUS.ERROR) {\n      return <div>Error Loading Data!</div>\n    } else {\n      return <WeatherCard weatherData={this.state.weatherData} />\n    }\n  }\n\n  handleChange(e) {\n    console.log(e.target.value)\n    \n    this.setState({\n      zip: e.target.value\n    })\n  }\n\n  getWeatherInCurrentLocation() {\n    navigator.geolocation.getCurrentPosition(this.fetchWeatherByBrowserPosition);\n  }\n\n  fetchWeatherByBrowserPosition(position) {\n    const { latitude, longitude } = position.coords;\n\n    const url = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${secrets.OPEN_WEATHER_MAP_KEY}`;\n    this.fetchWeather(url);\n  }\n\n  fetchWeatherByZip() {\n    this.setState({\n      zip: \"\"\n    })\n\n    const url = `http://api.openweathermap.org/data/2.5/weather?zip=${this.state.zip},us&appid=${secrets.OPEN_WEATHER_MAP_KEY}`;\n    this.fetchWeather(url);\n  }\n\n  fetchWeather(url) {\n    fetch(url)\n      .then(this.handleErrors)\n      .then(jsonData => this.setState({\n        loadingStatus: LOADING_STATUS.SUCCESS,\n        weatherData: jsonData\n      }))\n      .catch(() => this.setState({\n        loadingStatus: LOADING_STATUS.ERROR\n      }));\n  }\n\n  handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response.json();\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}