{"ast":null,"code":"import _classCallCheck from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/omarnyte/Projects/react-workshop/current-weather/src/WeatherCard.js\";\nimport './WeatherCard.css';\nimport React, { Component } from 'react';\n\nvar moment = require('moment');\n\nmoment().format();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var weatherData = this.props.weatherData;\n      console.log(props);\n      return React.createElement(\"div\", {\n        className: \"weather-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Current Temperature for \", weatherData.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.kelvinToFahrenheit(weatherData.main.temp), \"\\u2109\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"As of \", this.formatLocalTime()));\n    }\n  }, {\n    key: \"formatLocalTime\",\n    value: function formatLocalTime() {\n      var localTime = moment.utc().toDate();\n      return moment(localTime).format('YYYY-MM-DD HH:mm:ss');\n    }\n  }, {\n    key: \"kelvinToFahrenheit\",\n    value: function kelvinToFahrenheit(kelvin) {\n      return Math.floor((kelvin - 273.15) * 1.8 + 32);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/omarnyte/Projects/react-workshop/current-weather/src/WeatherCard.js"],"names":["React","Component","moment","require","format","App","weatherData","props","console","log","name","kelvinToFahrenheit","main","temp","formatLocalTime","localTime","utc","toDate","kelvin","Math","floor"],"mappings":";;;;;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACAD,MAAM,GAAGE,MAAT;;IAEMC,G;;;;;;;;;;;;;6BAEK;AAAA,UACCC,WADD,GACiB,KAAKC,KADtB,CACCD,WADD;AAEPE,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA6BD,WAAW,CAACI,IAAzC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,kBAAL,CAAwBL,WAAW,CAACM,IAAZ,CAAiBC,IAAzC,CAAJ,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU,KAAKC,eAAL,EAAV,CAHF,CADD;AAOD;;;sCAEiB;AAChB,UAAIC,SAAS,GAAIb,MAAM,CAACc,GAAP,GAAaC,MAAb,EAAjB;AACA,aAAOf,MAAM,CAACa,SAAD,CAAN,CAAkBX,MAAlB,CAAyB,qBAAzB,CAAP;AACD;;;uCAEkBc,M,EAAQ;AACzB,aAAOC,IAAI,CAACC,KAAL,CAAW,CAACF,MAAM,GAAG,MAAV,IAAoB,GAApB,GAA0B,EAArC,CAAP;AACD;;;;EArBejB,S;;AAwBlB,eAAeI,GAAf","sourcesContent":["import './WeatherCard.css';\nimport React, { Component } from 'react';\nvar moment = require('moment');\nmoment().format();\n\nclass App extends Component {\n \n  render() {\n    const { weatherData } = this.props;\n    console.log(props)\n    return (\n     <div className=\"weather-card\">\n       <h2>Current Temperature for {weatherData.name}</h2>\n       <p>{this.kelvinToFahrenheit(weatherData.main.temp)}&#8457;</p>\n       <p>As of {this.formatLocalTime()}</p>\n     </div> \n    );\n  }\n\n  formatLocalTime() {\n    var localTime  = moment.utc().toDate();\n    return moment(localTime).format('YYYY-MM-DD HH:mm:ss');\n  }\n\n  kelvinToFahrenheit(kelvin) {\n    return Math.floor((kelvin - 273.15) * 1.8 + 32)\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}