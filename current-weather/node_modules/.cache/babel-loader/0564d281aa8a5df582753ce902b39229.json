{"ast":null,"code":"import _classCallCheck from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js\";\nimport React, { Component } from 'react';\nimport secrets from \"./secrets\";\nimport WeatherCard from \"./WeatherCard\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      weatherData: null\n    };\n    _this.fetchWeather = _this.fetchWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchWeatherByBrowserPosition = _this.fetchWeatherByBrowserPosition.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeatherInCurrentLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          weatherData = _this$state.weatherData,\n          zip = _this$state.zip;\n\n      if (!weatherData) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"LOADING...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Current Weather\"), React.createElement(WeatherCard, {\n        weatherData: this.state.weatherData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        zip: e.target.value\n      });\n    }\n  }, {\n    key: \"getWeatherInCurrentLocation\",\n    value: function getWeatherInCurrentLocation() {\n      navigator.geolocation.getCurrentPosition(this.fetchWeatherByBrowserPosition);\n    }\n  }, {\n    key: \"fetchWeatherByBrowserPosition\",\n    value: function fetchWeatherByBrowserPosition(position) {\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      var url = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&appid=\").concat(secrets.OPEN_WEATHER_MAP_KEY);\n      this.fetchWeather(url);\n    }\n  }, {\n    key: \"fetchWeather\",\n    value: function fetchWeather(url) {\n      var _this2 = this;\n\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (jsonData) {\n        return _this2.setState({\n          weatherData: jsonData\n        });\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js"],"names":["React","Component","secrets","WeatherCard","App","props","state","weatherData","fetchWeather","bind","fetchWeatherByBrowserPosition","handleChange","getWeatherInCurrentLocation","zip","e","setState","target","value","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","url","OPEN_WEATHER_MAP_KEY","fetch","then","response","json","jsonData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,6BAAL,GAAqC,MAAKA,6BAAL,CAAmCD,IAAnC,uDAArC;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AATiB;AAUlB;;;;wCAEmB;AAClB,WAAKG,2BAAL;AACD;;;6BAEQ;AAAA,wBACsB,KAAKN,KAD3B;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcM,GADd,eACcA,GADd;;AAEP,UAAI,CAACN,WAAL,EAAkB;AAChB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AASD;;;iCAEYO,C,EAAG;AACd,WAAKC,QAAL,CAAc;AACZF,QAAAA,GAAG,EAAEC,CAAC,CAACE,MAAF,CAASC;AADF,OAAd;AAGD;;;kDAE6B;AAC5BC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKV,6BAA9C;AACD;;;kDAE6BW,Q,EAAU;AAAA,6BACNA,QAAQ,CAACC,MADH;AAAA,UAC9BC,QAD8B,oBAC9BA,QAD8B;AAAA,UACpBC,SADoB,oBACpBA,SADoB;AAGtC,UAAMC,GAAG,gEAAyDF,QAAzD,kBAAyEC,SAAzE,oBAA4FtB,OAAO,CAACwB,oBAApG,CAAT;AACA,WAAKlB,YAAL,CAAkBiB,GAAlB;AACD;;;iCAEYA,G,EAAK;AAAA;;AAChBE,MAAAA,KAAK,CAACF,GAAD,CAAL,CACGG,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,QAAQ;AAAA,eAAI,MAAI,CAAChB,QAAL,CAAc;AAC9BR,UAAAA,WAAW,EAAEwB;AADiB,SAAd,CAAJ;AAAA,OAFhB;AAKD;;;;EAzDe9B,S;;AA6DlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport secrets from \"./secrets\";\nimport WeatherCard from \"./WeatherCard\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherData: null,\n    }\n\n    this.fetchWeather = this.fetchWeather.bind(this);\n    this.fetchWeatherByBrowserPosition = this.fetchWeatherByBrowserPosition.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeatherInCurrentLocation();\n  }\n  \n  render() {\n    const { weatherData, zip } = this.state;\n    if (!weatherData) {\n      return <div>LOADING...</div>\n    }\n\n    return (\n      <div>\n        <header>\n          <h1>Current Weather</h1>\n          <WeatherCard weatherData={this.state.weatherData} />\n        </header>\n\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({\n      zip: e.target.value\n    })\n  }\n\n  getWeatherInCurrentLocation() {\n    navigator.geolocation.getCurrentPosition(this.fetchWeatherByBrowserPosition);\n  }\n\n  fetchWeatherByBrowserPosition(position) {\n    const { latitude, longitude } = position.coords;\n\n    const url = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${secrets.OPEN_WEATHER_MAP_KEY}`;\n    this.fetchWeather(url);\n  }\n\n  fetchWeather(url) {\n    fetch(url)\n      .then(response => response.json())\n      .then(jsonData => this.setState({\n        weatherData: jsonData\n      })); \n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}