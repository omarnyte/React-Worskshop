{"ast":null,"code":"import _classCallCheck from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/omarnyte/Projects/react-workshop/current-weather/src/WeatherCard.js\";\nimport React, { Component } from 'react';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tempComparison: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var currentCity = this.props.weatherData.name;\n      var nextCity = nextProps.weatherData.name;\n      return currentCity !== nextCity;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      console.log(\"component did update\");\n      var currentTemp = this.props.weatherData.main.temp;\n      var prevTemp = prevProps.weatherData.main.temp;\n      var prevCity = prevProps.weatherData.name;\n      var tempComparison;\n\n      if (prevTemp < currentTemp) {\n        tempComparison = \"That's warmer than \".concat(prevCity, \".\");\n      } else if (prevTemp > currentTemp) {\n        tempComparison = \"That's colder than \".concat(prevCity, \".\");\n      } else {\n        tempComparison = \"That's the same as \".concat(prevCity, \".\");\n      }\n\n      this.setState({\n        tempComparison: tempComparison\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var weatherData = this.props.weatherData;\n      var tempComparison = this.props.tempComparison;\n      var TempComparison = this.TempComparison;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Current Temperature for \", weatherData.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.kelvinToFahrenheit(weatherData.main.temp)), tempComparison && React.createElement(TempComparison, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"TempComparison\",\n    value: function TempComparison() {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.tempComparison);\n    }\n  }, {\n    key: \"kelvinToFahrenheit\",\n    value: function kelvinToFahrenheit(kelvin) {\n      return Math.floor((kelvin - 273.15) * 1.8 + 32);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/omarnyte/Projects/react-workshop/current-weather/src/WeatherCard.js"],"names":["React","Component","App","props","state","tempComparison","nextProps","currentCity","weatherData","name","nextCity","prevProps","console","log","currentTemp","main","temp","prevTemp","prevCity","setState","TempComparison","kelvinToFahrenheit","kelvin","Math","floor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAHiB;AAMlB;;;;0CAEqBC,S,EAAW;AAC/B,UAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,IAA3C;AACA,UAAMC,QAAQ,GAAGJ,SAAS,CAACE,WAAV,CAAsBC,IAAvC;AACA,aAAOF,WAAW,KAAKG,QAAvB;AACD;;;uCAEkBC,S,EAAW;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAIC,WAAW,GAAG,KAAKX,KAAL,CAAWK,WAAX,CAAuBO,IAAvB,CAA4BC,IAA9C;AACA,UAAIC,QAAQ,GAAGN,SAAS,CAACH,WAAV,CAAsBO,IAAtB,CAA2BC,IAA1C;AACA,UAAIE,QAAQ,GAAGP,SAAS,CAACH,WAAV,CAAsBC,IAArC;AAEA,UAAIJ,cAAJ;;AACA,UAAIY,QAAQ,GAAGH,WAAf,EAA4B;AAC1BT,QAAAA,cAAc,gCAAyBa,QAAzB,MAAd;AACD,OAFD,MAEO,IAAID,QAAQ,GAAGH,WAAf,EAA4B;AACjCT,QAAAA,cAAc,gCAAyBa,QAAzB,MAAd;AACD,OAFM,MAEA;AACLb,QAAAA,cAAc,gCAAyBa,QAAzB,MAAd;AACD;;AAED,WAAKC,QAAL,CAAc;AACZd,QAAAA,cAAc,EAAdA;AADY,OAAd;AAGD;;;6BAEQ;AAAA,UACCG,WADD,GACiB,KAAKL,KADtB,CACCK,WADD;AAAA,UAECH,cAFD,GAEoB,KAAKF,KAFzB,CAECE,cAFD;AAAA,UAGCe,cAHD,GAGoB,IAHpB,CAGCA,cAHD;AAIP,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA6BZ,WAAW,CAACC,IAAzC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKY,kBAAL,CAAwBb,WAAW,CAACO,IAAZ,CAAiBC,IAAzC,CAAJ,CAFF,EAGGX,cAAc,IAAI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHrB,CADD;AAOD;;;qCAEgB;AACf,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAWC,cAAf,CADF;AAGD;;;uCAEkBiB,M,EAAQ;AACzB,aAAOC,IAAI,CAACC,KAAL,CAAW,CAACF,MAAM,GAAG,MAAV,IAAoB,GAApB,GAA0B,EAArC,CAAP;AACD;;;;EAzDerB,S;;AA4DlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tempComparison: null\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const currentCity = this.props.weatherData.name;\n    const nextCity = nextProps.weatherData.name;\n    return currentCity !== nextCity;\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"component did update\")\n    let currentTemp = this.props.weatherData.main.temp;\n    let prevTemp = prevProps.weatherData.main.temp;\n    let prevCity = prevProps.weatherData.name;\n    \n    let tempComparison;\n    if (prevTemp < currentTemp) {\n      tempComparison = `That's warmer than ${prevCity}.`;\n    } else if (prevTemp > currentTemp) {\n      tempComparison = `That's colder than ${prevCity}.`;\n    } else {\n      tempComparison = `That's the same as ${prevCity}.`;\n    }\n\n    this.setState({\n      tempComparison\n    });\n  }\n  \n  render() {\n    const { weatherData } = this.props;\n    const { tempComparison } = this.props;\n    const { TempComparison } = this;\n    return (\n     <div>\n       <h2>Current Temperature for {weatherData.name}</h2>\n       <p>{this.kelvinToFahrenheit(weatherData.main.temp)}</p>\n       {tempComparison && <TempComparison />}\n     </div> \n    );\n  }\n\n  TempComparison() {\n    return (\n      <p>{this.state.tempComparison}</p>\n    )\n  }\n\n  kelvinToFahrenheit(kelvin) {\n    return Math.floor((kelvin - 273.15) * 1.8 + 32)\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}