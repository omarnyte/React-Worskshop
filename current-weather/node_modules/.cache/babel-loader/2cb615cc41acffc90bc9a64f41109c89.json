{"ast":null,"code":"import _regeneratorRuntime from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omarnyte/Projects/react-workshop/current-weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      temperature: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchWeatherByBrowserCoordinates();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var temperature = this.state.temperature;\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Current Weather\")));\n    }\n  }, {\n    key: \"fetchWeatherByBrowserCoordinates\",\n    value: function () {\n      var _fetchWeatherByBrowserCoordinates = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                navigator.geolocation.getCurrentPosition(function (position) {\n                  console.log('getting coords');\n                  console.log(position);\n                  return position;\n                }); // fetch('http://api.openweathermap.org/data/2.5/weather?lat=${},us&appid=54bf9788012da68b02084a76a5a0eaf1')\n                // .then(response => response.json())\n                // .then(json => console.log(json));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetchWeatherByBrowserCoordinates() {\n        return _fetchWeatherByBrowserCoordinates.apply(this, arguments);\n      }\n\n      return fetchWeatherByBrowserCoordinates;\n    }()\n  }, {\n    key: \"getCoordinates\",\n    value: function () {\n      var _getCoordinates = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"getting coordinates\");\n                return _context2.abrupt(\"return\", navigator.geolocation.getCurrentPosition(function (position) {\n                  return position;\n                }));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getCoordinates() {\n        return _getCoordinates.apply(this, arguments);\n      }\n\n      return getCoordinates;\n    }()\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/omarnyte/Projects/react-workshop/current-weather/src/App.js"],"names":["React","Component","App","props","state","temperature","fetchWeatherByBrowserCoordinates","navigator","geolocation","getCurrentPosition","position","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAClB,WAAKC,gCAAL;AACD;;;6BAEQ;AAAA,UACCD,WADD,GACiB,KAAKD,KADtB,CACCC,WADD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CADF;AAQD;;;;;;;;;;;AAGCE,gBAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACnDC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,yBAAOA,QAAP;AACD,iBAJD,E,CASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAIAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;kDACOL,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ;AAAA,yBAAIA,QAAJ;AAAA,iBAAjD,C;;;;;;;;;;;;;;;;;;;EA3COT,S;;AA+ClB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      temperature: null\n    }\n  }\n\n  componentDidMount() {\n    this.fetchWeatherByBrowserCoordinates();\n  }\n  \n  render() {\n    const { temperature } = this.state; \n\n    return (\n      <div className=\"\">\n        <header className=\"\">\n          <h1>Current Weather</h1>\n        </header>\n\n      </div>\n    );\n  }\n\n  async fetchWeatherByBrowserCoordinates() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log('getting coords')\n      console.log(position)\n      return position\n    });\n    \n\n    \n    \n    // fetch('http://api.openweathermap.org/data/2.5/weather?lat=${},us&appid=54bf9788012da68b02084a76a5a0eaf1')\n    // .then(response => response.json())\n    // .then(json => console.log(json));\n  }\n\n  async getCoordinates() {\n    console.log(\"getting coordinates\")\n    return navigator.geolocation.getCurrentPosition(position => position);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}